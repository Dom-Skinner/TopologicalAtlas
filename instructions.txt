To build the app:
Use docker to containerize/and precompile
https://genieframework.github.io/Genie.jl/dev/tutorials/16--Using_Genie_With_Docker.html


Can build on AWS but need a powerful machine (8Gb of mem) to docker build
https://genieframework.github.io/Genie.jl/dev/guides/Deploying_Genie_Apps_On_AWS.html

Alternatively scp from local computer the docker container. One can save a docker container with
docker save project > project.tar
to see docker containers use "docker images"
Then scp over
scp -i aws_key.pem my-demo-app.tar ec2-user@ip.address:my-demo-app.tar
need to do this for a julia image as well

# then run this for http only
docker run -p 80:8000 topo-app

############# reboot script
#!/bin/bash

systemctl stop docker.service
#sudo kill `sudo lsof -t -i:80`
kill -9 $(lsof -t -i:80) || echo "Process was not running."
systemctl start docker.service
nohup docker run -p 80:8000 topo-app 1>/dev/null 2>/dev/null &
#############

Set up Apache server and HTTPS:
https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/SSL-on-amazon-linux-2.html

run docker to map to port 8000 (internal port) and then change config files to:
<VirtualHost *:80>
    DocumentRoot "/var/www/html"
    ServerName "www.topologicalatlas.org"
ProxyRequests Off
ProxyPreserveHost Off    
ProxyPass / http://0.0.0.0:8080/
ProxyPass /check/ http://0.0.0.0:8080/
ProxyPassReverse / http://0.0.0.0:8080/
ProxyPassReverse /check/ http://0.0.0.0:8080/
RewriteEngine on
RewriteCond %{SERVER_NAME} =www.topologicalatlas.org
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>


<IfModule mod_ssl.c>
<VirtualHost *:443>
    DocumentRoot "/var/www/html"
    ServerName "www.topologicalatlas.org"
    ProxyPass / http://0.0.0.0:8000/
    ProxyPass /check/ http://0.0.0.0:8080/
    ProxyPassReverse / http://0.0.0.0:8000/
    ProxyPassReverse /check/ http://0.0.0.0:8080/
SSLCertificateFile /etc/letsencrypt/live/www.topologicalatlas.org/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/www.topologicalatlas.org/privkey.pem
Include /etc/letsencrypt/options-ssl-apache.conf
</VirtualHost>
</IfModule>
